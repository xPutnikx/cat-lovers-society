// Generated by CoffeeScript 1.4.0
(function() {
  var $, Br, Button, Div, Elem, FileInput, MessageDialog, MultiAutocompite, Select, TaskInput;

  $ = jQuery;

  Button = (function() {

    function Button(id) {
      this.id = id;
      return $("<button>").attr("id", "" + this.id).addClass("ui-button ui-widget ui-state-default ui-button-text-only ui-button-text button-decorator");
    }

    return Button;

  })();

  Elem = (function() {

    function Elem(type, elemclass, name) {
      this.elemclass = elemclass;
      return $("<" + type + ">").addClass("" + this.elemclass).attr("name", "" + name);
    }

    return Elem;

  })();

  MultiAutocompite = (function() {

    function MultiAutocompite(type, elemclass, name, id) {
      var _this = this;
      return new Elem(type, elemclass, name).attr("id", id).attr("type", "text").bind("keydown", function(event) {
        if (event.keyCode === $.ui.keyCode.TAB && $(_this).data("ui-autocomplete").menu.active) {
          return event.preventDefault();
        }
      }).autocomplete({
        minLength: 0,
        source: function(request, response) {
          return response($.ui.autocomplete.filter(userTags, extractLast(request.term)));
        },
        focus: function() {
          return false;
        },
        select: function(event, ui) {
          var terms;
          terms = split(this.value);
          terms.pop();
          terms.push(ui.item.value);
          terms.push("");
          this.value = terms.join(", ");
          return false;
        }
      });
    }

    return MultiAutocompite;

  })();

  TaskInput = (function() {

    function TaskInput(id, elemclass, list, name) {
      var input,
        _this = this;
      this.id = id;
      this.elemclass = elemclass;
      input = $("<input>").addClass("" + this.elemclass).attr("id", "" + this.id).attr("type", "text").attr("name", "" + name).click(function(e) {
        return clickAutocompl("" + _this.id);
      });
      createAutocomplete(input, list);
      return input;
    }

    return TaskInput;

  })();

  FileInput = (function() {

    function FileInput(id, elemclass, list, name) {
      var input;
      this.id = id;
      this.elemclass = elemclass;
      input = $("<input>").addClass("" + this.elemclass).attr("id", "" + this.id).attr("type", "file").attr("name", "" + name);
      return input;
    }

    return FileInput;

  })();

  Select = (function() {

    function Select(elemclass, options, name) {
      var opt, option, select, _i, _len, _ref;
      this.elemclass = elemclass;
      this.options = options;
      select = $("<select>").addClass("" + this.elemclass).attr("name", "" + name);
      select.append(new Option("", ""));
      if (this.options != null) {
        _ref = this.options;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          option = _ref[_i];
          opt = new Option(option.value, option.value);
          select.append(opt);
        }
      }
      return select;
    }

    return Select;

  })();

  Br = (function() {

    function Br() {
      var br;
      br = $("<br>");
      return br;
    }

    return Br;

  })();

  Div = (function() {

    function Div(elemClass) {
      var div;
      div = $("<div>").addClass("" + elemClass);
      return div;
    }

    return Div;

  })();

  MessageDialog = (function() {

    function MessageDialog() {}

    MessageDialog.prototype.controller = function(userId) {
      this.userId = userId;
    };

    MessageDialog.prototype.createDialog = function() {
      this.dialogMainDiv = new Div("message-dialog ui-dialog ui-widget ui-widget-content ui-corner-all ui-front ui-dialog-buttons ui-draggable ui-resizable").css({
        position: "absolute",
        height: "auto",
        width: "350px",
        top: "23px",
        left: "116px",
        display: "block"
      }).append($(".message-inner-div").show());
      return $("body").append(this.dialogMainDiv);
    };

    return MessageDialog;

  })();

  $(function() {
    var _this = this;
    return $("#sendMessage").click(function(e) {
      var messageDialog;
      messageDialog = new MessageDialog($(e.target).attr("userid"));
      return messageDialog.createDialog();
    });
  });

}).call(this);
